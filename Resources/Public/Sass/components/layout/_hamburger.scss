@use 'sass:math';

// ---------------------------------------------------------------------------------------------------------------------
// @see: https://github.com/jonsuh/hamburgers/blob/master/_sass/hamburgers/_base.scss
// @see: https://github.com/jonsuh/hamburgers/blob/master/_sass/hamburgers/types/_spring-r.scss
.hamburger {
	& {
		display: inline-block;
		cursor: pointer;
		padding: $hamburger-layer-spacing + $hamburger-padding-y 0 $hamburger-padding-y 0;
		outline: 0;

		// Normalize (<button>)
		font: inherit;
		color: inherit;
		text-transform: none;
		background-color: transparent;
		border: 0;
		margin: 0;
		overflow: visible;
	}

	&:hover .hamburger__rules, .focusable &:focus .hamburger__rules {
		&, &:before, &:after {
			transition-duration: 0.13s;
			width: $hamburger-layer-width;
			background: var(--link__color-active);
		}
	}
}

.hamburger__container {
	width: $hamburger-layer-width;
	height: $hamburger-layer-height * 3 + $hamburger-layer-spacing * 2;
	display: inline-block;
	position: relative;
}

.hamburger__rules {
	&,
	&:before,
	&:after {
		position: absolute;
		width: $hamburger-layer-width;
		height: $hamburger-layer-height;
		background-color: var(--font__color-default);
		transition-property: width, transform;
	}

	& {
		display: block;
		top: auto;
		bottom: 0;
		margin-top: math.div($hamburger-layer-height, -2);
		transition-property: width, transform;
		transition-duration: var(--transition__duration-default);
		transition-delay: 0s;
		transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
	}

	&:before,
	&:after {
		content: '';
		display: block;
	}

	&:before {
		top: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;
		transition: top 0.1s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1);
		transition-property: width, top;
		width: 22px;
	}

	&:after {
		top: ($hamburger-layer-spacing * 2 + $hamburger-layer-height * 2) * -1;
		transition: top 0.2s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1);
		transition-property: width, top;
		width: 28px;
	}

	.is--off-canvas-active & {
		& {
			transform: translate3d(0, ($hamburger-layer-spacing + $hamburger-layer-height) * -1, 0) rotate(-45deg);
			transition-delay: 0.22s;
			transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
		}

		&,
		&:before,
		&:after {
			width: $hamburger-layer-width;
		}

		&:after {
			top: 0;
			opacity: 0;
			transition: top 0.2s cubic-bezier(0.33333, 0, 0.66667, 0.33333),
			opacity 0s 0.22s linear;
		}

		&:before {
			top: 0;
			transform: rotate(90deg);
			transition: top 0.1s 0.15s cubic-bezier(0.33333, 0, 0.66667, 0.33333),
			transform 0.13s 0.22s cubic-bezier(0.215, 0.61, 0.355, 1);
		}
	}
}