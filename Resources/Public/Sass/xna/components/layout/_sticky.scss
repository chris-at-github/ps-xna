@include stylesheet-context($stylesheet-context-embed) {
	.sticky--container {
		position: fixed;
		top: 171px; right: 0;
		z-index: 50;
		display: none;
	}

	.sticky--element {
		position: relative;
		transform: translate(0, 0);
		transition: transform 0.35s;
		transition-delay: 0.085s;
	}

	.sticky--icon {
		& {
			display: flex;
			justify-content: center;
			align-items: center;
			width: rem(60px);
			height: rem(208px);
			padding: 0;
			border: 0;
			border-top-left-radius: 5px;
			border-bottom-left-radius: 5px;
			background: $theme-color-primary;
			cursor: pointer;
		}

		&:hover, .focusable &:focus {
			background: $theme-color-third;
		}

		svg {
			width: 15px;
			height: 117px;
		}
	}

	.sticky--element-question {
		.sticky--icon {
			& {
				margin-top: rem(5px);
				height: rem(60px);
				background: #0f7d7f;
				transition: background $transition-duration;
			}

			&:hover, .focusable &:focus {
				background: $theme-color-primary;
			}

			svg {
				width: 12px;
				height: 24px;
			}
		}
	}

	.sticky--off-canvas {
		& {
			position: absolute;
			top: -55px; right: 0;
			width: rem(360px);
			min-height: rem(263px);
			padding: rem(10px 20px);
			background: $theme-color-primary;
			transform: translate(rem(440px), 0);
			transition: transform 0.085s;
		}

		&, a, a:hover, .focusable & a:focus, .focusable & .link--phone:focus {
			color: #fff;
			background-image: linear-gradient(#fff, #fff);
		}
	}

	// ---------------------------------------------------------------------------------------------------------------------
	// >= 768px
	@include media-breakpoint-up(md) {
		.sticky--container {
			display: block;
		}
	}
}

@include stylesheet-context($stylesheet-context-import) {
	.sticky--close {
		& {
			position: absolute;
			top: 0; left: rem(-60px);
			display: flex;
			justify-content: center;
			align-items: center;
			width: rem(60px);
			height: rem(60px);
			padding: 0;
			border: 0;
			border-top-left-radius: 5px;
			background: $theme-color-third;
			cursor: pointer;
		}

		&:hover, .focusable &:focus {
			background: $theme-color-third;
		}

		svg {
			width: 27px;
			height: 27px;
			fill: #fff;
		}
	}

	.sticky--element {
		&.is--active {
			& {
				transform: translate(-360px, 0);
			}

			.sticky--off-canvas {
				transform: translate(360px, 0);
			}
		}

		&.is--closing {
			& {
				transform: translate(0, 0);
				transition-delay: 0s;
			}

			.sticky--off-canvas {
				transform: translate(440px, 0);
				transition-duration: 0.2s;
				transition-delay: 0.25s;
			}
		}
	}

	.sticky--element-contact {
		.address {
			@extend %address;
		}
	}
}
